version: '3.7'

services:
  app:
    container_name: lms_backend
    build:
      context: .
      dockerfile: Dockerfile
    command: "python manage.py runserver 0.0.0.0:8080"
    env_file:
      - .env
    ports:
      - 8080:8080
    volumes:
      - ./lms_backend:/lms_backend
    stdin_open: true
    tty: true
    depends_on:
      - db
    restart: always
    profiles:
      - local

  app-prod:
    container_name: lms_backend
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    ports:
      - 8080:8080
    volumes:
      - ./lms_backend:/lms_backend
    stdin_open: true
    tty: true
    depends_on:
      - db
    restart: always
    profiles:
      - prod

  db:
    container_name: lms_backend_postgresql
    image: postgres:14.1-alpine
    restart: always
    env_file:
      - .env
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
